package geneticbots;
public class Properties extends javax.swing.JFrame
{

    /**
     * Creates new form Properties
     */
    public Properties()
    {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sMutation = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        sPop = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        sBarrier = new javax.swing.JSlider();
        bStart = new javax.swing.JButton();
        dMutation = new javax.swing.JLabel();
        dPop = new javax.swing.JLabel();
        dBarriers = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sFPS = new javax.swing.JSlider();
        dFPS = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Genetics Program");

        jLabel2.setText("Mutation");

        sMutation.setMajorTickSpacing(100);
        sMutation.setMaximum(1000);
        sMutation.setMinorTickSpacing(10);
        sMutation.setPaintTicks(true);
        sMutation.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sMutationStateChanged(evt);
            }
        });

        jLabel3.setText("Population");

        sPop.setMajorTickSpacing(20);
        sPop.setMaximum(200);
        sPop.setMinimum(1);
        sPop.setMinorTickSpacing(2);
        sPop.setPaintTicks(true);
        sPop.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sPopStateChanged(evt);
            }
        });

        jLabel4.setText("Barriers");

        sBarrier.setMajorTickSpacing(10);
        sBarrier.setMaximum(20);
        sBarrier.setMinorTickSpacing(1);
        sBarrier.setPaintTicks(true);
        sBarrier.setValue(5);
        sBarrier.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sBarrierStateChanged(evt);
            }
        });

        bStart.setText("Start");
        bStart.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bStartActionPerformed(evt);
            }
        });

        dMutation.setText(".05");

        dPop.setText("50");

        dBarriers.setText("5");

        jLabel5.setText("FPS");

        sFPS.setMajorTickSpacing(30);
        sFPS.setMaximum(300);
        sFPS.setMinimum(1);
        sFPS.setMinorTickSpacing(6);
        sFPS.setPaintTicks(true);
        sFPS.setValue(150);
        sFPS.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sFPSStateChanged(evt);
            }
        });

        dFPS.setText("150");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(bStart))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(sPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dPop))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(sMutation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dMutation))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(sBarrier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dBarriers))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(sFPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dFPS)))))
                                .addGap(0, 67, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dMutation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sMutation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bStart))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sBarrier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dBarriers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sFPS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(dFPS, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 88, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bStartActionPerformed
    {//GEN-HEADEREND:event_bStartActionPerformed
        // TODO add your handling code here:
        GeneticBots.setBarriers(sBarrier.getValue());
        GeneticBots.setMutation(sMutation.getValue() / 1000.0);
        GeneticBots.setPopulation(sPop.getValue());
        GeneticBots.setFps(sFPS.getValue());
        GeneticBots.start = true;
        this.dispose();
        
    }//GEN-LAST:event_bStartActionPerformed

    private void sMutationStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sMutationStateChanged
    {//GEN-HEADEREND:event_sMutationStateChanged
        // TODO add your handling code here:
        dMutation.setText("" + sMutation.getValue() / 1000.0);
    }//GEN-LAST:event_sMutationStateChanged

    private void sPopStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sPopStateChanged
    {//GEN-HEADEREND:event_sPopStateChanged
        // TODO add your handling code here:
        dPop.setText("" + sPop.getValue());
    }//GEN-LAST:event_sPopStateChanged

    private void sBarrierStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sBarrierStateChanged
    {//GEN-HEADEREND:event_sBarrierStateChanged
        // TODO add your handling code here:
        dBarriers.setText("" + sBarrier.getValue());
    }//GEN-LAST:event_sBarrierStateChanged

    private void sFPSStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sFPSStateChanged
    {//GEN-HEADEREND:event_sFPSStateChanged
        // TODO add your handling code here:
        dFPS.setText("" + sFPS.getValue());
    }//GEN-LAST:event_sFPSStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Properties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Properties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Properties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Properties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                Properties p = new Properties();
                p.setVisible(true);
                p.dFPS.setText("" + GeneticBots.fps);
                p.sFPS.setValue(GeneticBots.fps);
                p.dBarriers.setText("" + GeneticBots.barriers);
                p.sBarrier.setValue(GeneticBots.barriers);
                p.dMutation.setText("" + GeneticBots.mutation);
                p.sMutation.setValue((int) (GeneticBots.mutation * 1000));
                p.dPop.setText("" + GeneticBots.population);
                p.sPop.setValue((int) (GeneticBots.population));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bStart;
    private javax.swing.JLabel dBarriers;
    private javax.swing.JLabel dFPS;
    private javax.swing.JLabel dMutation;
    private javax.swing.JLabel dPop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSlider sBarrier;
    private javax.swing.JSlider sFPS;
    private javax.swing.JSlider sMutation;
    private javax.swing.JSlider sPop;
    // End of variables declaration//GEN-END:variables
}
